
Install CentOS 7, minimal installation
- Disable SELinux in /etc/sysconfig/selinux
- Reboot

Install all required packages. Run
	sudo setup/install.sh

Download latest released BNC source code from https://igs.bkg.bund.de/ntrip/bnc
Compile BNC:
	unzip bnc-x.x.x-source.zip
	cd bnc-x.x.x-source
	/usr/lib64/qt4/bin/qmake bnc.pro
	make
	sudo install -o root -g bin -m 755 bnc /usr/local/bin

Download latest gfzrnx Linux x64 binary from
	http://semisys.gfz-potsdam.de/semisys/scripts/download/index.php
(GFZ Software tab)
Install using
	sudo install -o root -g bin -m 755 gfzrnx_lx /usr/local/bin/gfzrnx

Download latest Hatanaka compression software (RNXCMP) from:
	https://terras.gsi.go.jp/ja/crx2rnx.html
Unpack, compile and install with
	tar xzf RNXCMP_4.0.8_src.tar.gz
	cd RNXCMP_4.0.8_src/source
	gcc -O2 crx2rnx.c -o crx2rnx
	gcc -O2 rnx2crx.c -o rnx2crx
	install -o root -g bin -m 755 crx2rnx rnx2crx /usr/local/bin

Download lastest version of Septentrio RxTools from:
	https://www.septentrio.com/en/support/software/rxtools
Download rxtools_19_0_0_installer_x64.bin
Upload the file to an RHEL with X11 interface.
Login using the X11 interface login.
Using a terminal shell session, do:
		chmod 755 rxtools_*
		mkdir -m 700 xdg
		XDG_RUNTIME=`pwd`/xdg ./rxtools_19_0_0_installer_x64.bin
			(follow the install instructions. install everything).
The sbf2rin can now be found in $HOME/RxTools/bin
Transfer sbf2bin to the host you are installing and install using
	install -o root -g bin -m 755 sbf2rin /usr/local/bin

Configure:

Postfix:
	myhostname
	mydomain
	relayhost

Mount datastore:
	mkdir /data
	Mount data disk on /data
	mkdir /data/{ftp,upload,saved,queue,work}

FTP users:
	useradd -d /data/ftp -p gnss3 gnss3
	chown gnss3:gnss /data/ftp
	chmod 775 /data/ftp

mariadb:
	Create /data/mysql
		mkdir /data/mysql
		chown mysql:mysql /data/mysql
		chcon -u system_u -r object_r -t mysqld_db_t /data/mysql  (only if SElinux is not disabled)
	Modify /etc/my.cnf.d/server.cnf
		Add "datadir = /data/mysql" in [server] section
	systemctl enable mariadb
	systemctl start mariadb
	Run "mysql_secure_installation"
	Create gpsuser
		mysql -u root -p mysql
		create database gps;
		create user gpsuser@localhost identified by 'gpsuser';
		grant all privileges on gps.* to gpsuser@localhost;
	Check local access with:
		# mysql -ugpsuser -pgpsuser gps     (should be able to login)
	Run SQL script
		cd sql
		\. create-gps-db.sql
		show tables;
	Should display:
		+---------------+
		| Tables_in_gps |
		+---------------+
		| antennas      |
		| locations     |
		  .....
		| uploaddest    |
		+---------------+

firewall:
	If this host is exposed to the internet, then it should have a firewall install.
	/usr/local/bin/fw is a tool to maintain iptables as firewall.
