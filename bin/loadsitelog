#!/usr/bin/perl
#
# Utility for loading a sitelog into database.
#
# Soren Juul Moller, Nov 2019

use strict;
use warnings;
use Utils;
use GPSDB;

sub readsection($$) {
  my ($sitelog, $secno) = @_;
  my %sec;
  open(my $fd, '<', $sitelog);
  while (<$fd>) {
    last if /^$secno\s+/;
  }
  return undef if eof($fd);
  if (/^\d\.\d+\s+(.*):\s+(.*)/) {
    my ($key,$val) = ($1,$2);
    $key =~ s/\s+$//;
    $val =~ s/\s+$//;
    $sec{$key} = $val;
  }
  while (<$fd>) {
    last if /^\d./;
    chomp;
    study;
    if (/^\s+(.*):\s+(.*)/) {
      my ($key, $val) = ($1, $2);
      $key =~ s/\s+$//;
      $val =~ s/\s+$//;
      $sec{$key} = $val;
    }
  };
  close($fd);
  return \%sec;
}

sub fixdate($) {
  my $str = shift;
  return undef if !defined $str || $str !~ /^[0-9]/;
  $str =~ s/T/ /; $str =~ s/Z//;
  return $str;
}

my $sitelog = shift(@ARGV);
if (! -f $sitelog) {
  print STDERR "$0: no such file: $sitelog\n";
  exit(2);
}

my %s;
my $sec = readsection($sitelog, "1.");
$s{'site'} = uc($sec->{'Four Character ID'});
die("$0: site not found in $sitelog") unless defined $s{'site'};

$s{'site'} = site42site($s{'site'});
$s{'markernumber'} = $sec->{'IERS DOMES Number'};

$sec = readsection($sitelog, "2.");
die("$0: Marker position not found in $sitelog") unless defined $sec->{'X coordinate (m)'};
$s{'position'} = $sec->{'X coordinate (m)'}.','.$sec->{'Y coordinate (m)'}.','.$sec->{'Y coordinate (m)'};

my $subsec = 1;
my @rec = ();
while (1) {
  $sec = readsection($sitelog, "3.$subsec");
  last if !defined $sec;
  my %r;
  $r{'rectype'} = $sec->{'Receiver Type'};
  $r{'rectype'} =~ s/\s+/,/;
  $r{'recsn'} = $sec->{'Serial Number'};
  $r{'firmware'} = $sec->{'Firmware Version'};
  $r{'startdate'} = fixdate($sec->{'Date Installed'});
  $r{'enddate'} = fixdate($sec->{'Date Removed'});
  push(@rec, \%r);
  $subsec++;
}
die("$0: no receivers found") unless scalar(@rec) > 0;

$subsec = 1;
my @ant = ();
while (1) {
  $sec = readsection($sitelog, "4.$subsec");
  last if !defined $sec;
  my %r;
  $r{'anttype'} = $sec->{'Antenna Type'};
  $r{'anttype'} =~ s/\s+/,/;
  $r{'antsn'} = $sec->{'Serial Number'};
  $r{'antdelta'} = $sec->{'Marker->ARP Up Ecc. (m)'}.','.$sec->{'Marker->ARP North Ecc(m)'}.','.$sec->{'Marker->ARP East Ecc(m)'};
  $r{'startdate'} = fixdate($sec->{'Date Installed'});
  $r{'enddate'} = fixdate($sec->{'Date Removed'});
  push(@ant, \%r);
  $subsec++;
}
die("$0: no antennas found") unless scalar(@ant) > 0;

my $db = new GPSDB;
my $dbh = $db->{'DBH'};
die("unable to connect to DB") unless defined $dbh;

$dbh->do(q{
	delete from locations where site = ?
}, undef, $s{'site'});
$dbh->do(q{
	insert into locations (site, freq, obsint, markernumber, markertype, position, observer, agency, ts, active)
	values (?,'H',1,?,'GEODETIC',?,'SDFE','SDFE',current_timestamp(),1)
}, undef, $s{'site'},$s{'markernumber'},$s{'position'});

$dbh->do(q{
	delete from receivers where site = ?
}, undef, $s{'site'});
my $sql = $dbh->prepare(q{
	insert into receivers (site, recsn, rectype, firmware, startdate, enddate)
	values (?,?,?,?,?,?)
});
foreach my $i (@rec) {
  $sql->execute($s{'site'}, $i->{'recsn'}, $i->{'rectype'}, $i->{'firmware'}, $i->{'startdate'}, $i->{'enddate'});
}

$dbh->do(q{
	delete from antennas where site = ?
}, undef, $s{'site'});
$sql = $dbh->prepare(q{
	insert into antennas (site, anttype, antsn, antdelta, startdate, enddate)
	values (?,?,?,?,?,?)
});
foreach my $i (@ant) {
  $sql->execute($s{'site'}, $i->{'anttype'}, $i->{'antsn'}, $i->{'antdelta'}, $i->{'startdate'}, $i->{'enddate'});
}
